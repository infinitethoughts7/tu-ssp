name: Deploy TU-SSP to EC2
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      # Build frontend on GitHub (plenty of memory)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Build frontend
        run: |
          cd frontend
          npm run build:prod
          
      # Debug: Check what was built
      - name: Debug - Check built files
        run: |
          echo "Built files:"
          ls -la frontend/dist/
          
      # Prepare EC2 for deployment
      - name: Prepare EC2 for deployment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Create fresh dist directory
            rm -rf /home/ubuntu/tu-ssp/frontend/dist
            mkdir -p /home/ubuntu/tu-ssp/frontend/dist
            
      # Deploy built frontend to EC2 - Using rsync instead
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
          
      - name: Deploy frontend build with rsync
        run: |
          rsync -avz --delete frontend/dist/ ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/tu-ssp/frontend/dist/
          
      # Verify deployment
      - name: Verify frontend deployment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Files in dist folder:"
            ls -la /home/ubuntu/tu-ssp/frontend/dist/
            echo "Checking if index.html exists:"
            test -f /home/ubuntu/tu-ssp/frontend/dist/index.html && echo "index.html found" || echo "index.html NOT found"
            
      # Deploy backend and restart services
      - name: Deploy backend to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/tu-ssp
            
            # Force pull latest code (overwrite any local changes)
            git fetch origin main
            git reset --hard origin/main
            
            # Backend setup (no npm install here!)
            cd backend
            source venv/bin/activate
            pip install -r requirements.txt
            
            # Create new migrations for any model changes
            python manage.py makemigrations
            
            # Run migrations
            python manage.py migrate
            
            # Collect static files
            python manage.py collectstatic --noinput
            
            # Restart services
            sudo systemctl restart gunicorn
            sudo systemctl reload nginx
            
      # Health check with better error handling
      - name: Health check
        run: |
          sleep 15
          response=$(curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.EC2_HOST }}/)
          echo "HTTP response code: $response"
          if [ "$response" = "200" ]; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Health check failed with HTTP $response"
            exit 1
          fi